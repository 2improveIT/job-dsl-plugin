buildscript {
    repositories {
        maven {
            name 'jenkins-ci-plugins'
            url("http://maven.jenkins-ci.org/content/repositories/releases")
        }
        mavenCentral()
    }
    dependencies { classpath('org.jenkins-ci.tools:gradle-jpi-plugin:0.4.0') }
}
apply plugin: 'jpi'

repositories {
    maven {
        name 'jenkin-ci'
        url "http://maven.jenkins-ci.org/content/repositories/releases"
    }
    mavenCentral()
}

configurations.testCompile.exclude group: 'org.jenkins-ci.modules', module:'instance-identity'
configurations.testCompile.exclude group: 'org.jenkins-ci.modules', module:'ssh-cli-auth'

dependencies { 
    groovy localGroovy()
}

group = "org.jenkinsci.plugins"
version = "0.1"
description = "This plugin allows definition of a Jobs via a DSL, integating with Template jobs."
archivesBaseName = "jenkins-job-dsl"

jenkinsPlugin {
    coreVersion = '1.456'
    displayName = 'Job DSL'
    url = "https://wiki.jenkins-ci.org/display/JENKINS/Associated+Files+Plugin" // TODO
}

task createWrapper(type: Wrapper) { gradleVersion = '1.0-milestone-9' }

/** Added to work around the bug GRADLE-1420 */
task pathingJar(type: Jar , dependsOn: 'cleanPathingJar') {
	/**
	 * If the gradle_user_home env var has been set to
         * C:\ on a Win7 machine, we may not have permission to write the jar to
	 * this directory, so we will write it to the caches subdir instead.
         * This assumes a caches subdir containing the jars
	 * will always exist.
	 */
	gradleUserHome = new File(gradle.getGradleUserHomeDir(), "caches")

	relativeClasspathEntries = configurations.compile.files.collect {
		new File(gradleUserHome.getAbsolutePath()).toURI().
                      relativize(new File(it.getAbsolutePath()).toURI()).getPath()
	}
	appendix = "pathing"
	destinationDir = gradleUserHome
	doFirst {
		manifest {
			attributes "Class-Path": relativeClasspathEntries.join(" ")
		}
	}
}

compileGroovy {
	dependsOn(pathingJar)
	classpath = files(pathingJar.archivePath)
}